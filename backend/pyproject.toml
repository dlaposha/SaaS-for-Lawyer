[tool.poetry]
name = "lawyer-crm-backend"
version = "1.0.0"
description = "SaaS CRM для юридичних фірм з AI-інтеграцією"
authors = ["dlaposha <d.laposha@gmail.com>"]
readme = "README.md"
packages = [{ include = "src", from = "backend" }]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"

# ------- Core Framework -------
fastapi = "^0.104.1"
uvicorn = { extras = ["standard"], version = "^0.24.0" }
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# ------- Database & ORM -------
sqlmodel = "^0.0.22"
alembic = "^1.12.1"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"

# ------- Security & Auth -------
python-jose = { extras = ["cryptography"], version = "^3.3.0" }
passlib = { extras = ["bcrypt"], version = "^1.7.4" }
bcrypt = "^4.0.1"
python-multipart = "^0.0.6"

# ------- Caching & Background Tasks -------
redis = "^5.0.1"
celery = { version = "^5.3.6", extras = ["redis"] }
flower = "^2.0.1"

# ------- File Storage -------
minio = "^7.2.0"

# ------- HTTP & Email -------
httpx = "^0.25.2"
email-validator = "^2.1.0"
aiosmtplib = "^3.0.1"
python-dotenv = "^1.0.0"

# ------- AI & ML Integration -------
openai = "^1.9.0"
langchain = "^0.1.0"
python-docx = "^1.1.0"
pdfplumber = "^0.10.3"

# ------- Monitoring & Logging -------
structlog = "^23.2.0"
prometheus-client = "^0.19.0"
sentry-sdk = { version = "^1.40.0", optional = true }

# ------- Payments -------
stripe = { version = "^8.0.0", optional = true }

[tool.poetry.extras]
sentry = ["sentry-sdk"]
payments = ["stripe"]
ai = ["openai", "langchain", "python-docx", "pdfplumber"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
factory-boy = "^3.3.1"
black = "^23.11.0"
ruff = "^0.1.6"
isort = "^5.13.2"
pre-commit = "^3.5.0"
mypy = "^1.7.1"
jupyter = "^1.0.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
httpx = "^0.25.2"
freezegun = "^1.2.2"

[tool.poetry.group.security.dependencies]
bandit = "^1.7.5"
safety = "^2.3.5"
vulture = "^2.10"
radon = "^5.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests", "backend/tests"]
asyncio_mode = "auto"
addopts = """
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    -ra
"""
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]