services:
  db:
    image: postgres:16-alpine
    container_name: lawyer_crm_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-lawyer_crm}
      POSTGRES_USER: ${POSTGRES_USER:-crm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/init-db:/docker-entrypoint-initdb.d
      - ./backend/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres 
      -c config_file=/etc/postgresql/postgresql.conf
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
    networks:
      - lawyer-crm-network

  redis:
    image: redis:7-alpine
    container_name: lawyer_crm_redis_dev
    restart: unless-stopped
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --save 60 1000
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --maxmemory-samples 5
      --tcp-keepalive 300
      --timeout 0
    volumes:
      - redis_data_dev:/data
      - ./backend/redis.conf:/etc/redis/redis.conf
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - lawyer-crm-network

  minio:
    image: minio/minio:latest
    container_name: lawyer_crm_minio_dev
    restart: unless-stopped
    command: server /data --console-address ":9091"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data_dev:/data
    ports:
      - "9000:9000"
      - "9091:9091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - lawyer-crm-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        - BUILD_ENVIRONMENT=development
    container_name: lawyer_crm_backend_dev
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # MinIO
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET:-lawyer-crm}
      MINIO_SECURE: ${MINIO_SECURE:-false}
      # Security
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      # CORS
      CORS_ORIGINS: ${CORS_ORIGINS}
      # Environment
      ENVIRONMENT: ${ENVIRONMENT:-development}
      DEBUG: ${DEBUG:-true}
      # SMTP
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
    volumes:
      - ./backend:/app
      - ./backend/logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - lawyer-crm-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: lawyer_crm_frontend_dev
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://backend:8000/api/v1
      - GENERATE_SOURCEMAP=false
      - DISABLE_ESLINT_PLUGIN=true
      - INLINE_RUNTIME_CHUNK=false
    networks:
      - lawyer-crm-network

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: lawyer_crm_celery_dev
    restart: unless-stopped
    command: ["celery", "-A", "src.celery.celery_app", "worker", "--loglevel=info", "--concurrency=2"]
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET:-lawyer-crm}
      MINIO_SECURE: ${MINIO_SECURE:-false}
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - lawyer-crm-network

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  minio_data_dev:
    driver: local

networks:
  lawyer-crm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16